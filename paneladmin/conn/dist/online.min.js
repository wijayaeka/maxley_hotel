/*! OnlineJS - v0.3.1 - 2014-07-07
* http://pixelscommander.com/polygon/onlinejs/
* Copyright (c) 2014 Denis Radin aka PixelsCommander; Licensed BSD */
function getterSetter(a,b,c,d){Object.defineProperty?Object.defineProperty(a,b,{get:c,set:d}):document.__defineGetter__&&(a.__defineGetter__(b,c),a.__defineSetter__(b,d))}!function(a){a.onlinejs=a.onlinejs||{},a.onLineCheckTimeout=5e3,a.onlinejs._onLineURL="http://offlinejs.com/online.php",a.onlinejs.setOnLineURL=function(b){a.onlinejs._onLineURL=b,a.onlinejs.getStatusFromNavigatorOnLine()},a.onlinejs.getOnLineURL=function(){return a.onlinejs._onLineURL},getterSetter(a,"onLineURL",a.onlinejs.getOnLineURL,a.onlinejs.setOnLineURL),a.onlinejs.setStatus=function(b){a.onlinejs.fireHandlerDependOnStatus(b),a.onLine=b},a.onlinejs.fireHandlerDependOnStatus=function(b){b!==!0||void 0===a.onLineHandler||a.onLine===!0&&a.onlinejs.handlerFired!==!1||a.onLineHandler(),b!==!1||void 0===a.offLineHandler||a.onLine===!1&&a.onlinejs.handlerFired!==!1||a.offLineHandler(),a.onlinejs.handlerFired=!0},a.onlinejs.startCheck=function(){setInterval("window.onlinejs.logic.checkConnectionWithRequest(true)",a.onLineCheckTimeout)},a.onlinejs.stopCheck=function(){clearInterval("window.onlinejs.logic.checkConnectionWithRequest(true)",a.onLineCheckTimeout)},a.checkOnLine=function(){a.onlinejs.logic.checkConnectionWithRequest(!1)},a.onlinejs.getOnLineCheckURL=function(){return a.onlinejs._onLineURL+"?"+Math.floor(1e6*Math.random())},a.onlinejs.getStatusFromNavigatorOnLine=function(){a.onlinejs.setStatus(void 0!==a.navigator.onLine?a.navigator.onLine:!0)};var b=new XMLHttpRequest;a.onlinejs.isXMLHttp=function(){return"withCredentials"in b},a.onlinejs.isXDomain=function(){return"undefined"!=typeof XDomainRequest},a.onlinejs.XDomainLogic={init:function(){b=new XDomainRequest,b.onerror=function(){b.status=404,a.onlinejs.processXmlhttpStatus()},b.ontimeout=function(){b.status=404,a.onlinejs.processXmlhttpStatus()}},onInternetAsyncStatus:function(){try{b.status=200,a.onlinejs.processXmlhttpStatus()}catch(c){a.onlinejs.setStatus(!1)}},checkConnectionWithRequest:function(){b.onload=a.onlinejs.logic.onInternetAsyncStatus;var c=a.onlinejs.getOnLineCheckURL();b.open("GET",c),a.onlinejs.tryToSend(b)}},a.onlinejs.XMLHttpLogic={init:function(){},onInternetAsyncStatus:function(){if(4===b.readyState)try{a.onlinejs.processXmlhttpStatus()}catch(c){a.onlinejs.setStatus(!1)}},checkConnectionWithRequest:function(c){b.onreadystatechange=c?a.onlinejs.logic.onInternetAsyncStatus:void 0;var d=a.onlinejs.getOnLineCheckURL();return b.open("HEAD",d,c),a.onlinejs.tryToSend(b),c===!1?(a.onlinejs.processXmlhttpStatus(),a.onLine):void 0}},a.onlinejs.logic=a.onlinejs.isXDomain()?a.onlinejs.XDomainLogic:a.onlinejs.XMLHttpLogic,a.onlinejs.processXmlhttpStatus=function(){var c=a.onlinejs.verifyStatus(b.status);a.onlinejs.setStatus(c)},a.onlinejs.verifyStatus=function(a){return 200===a},a.onlinejs.tryToSend=function(b){try{b.send()}catch(c){a.onlinejs.setStatus(!1)}},a.onlinejs.addEvent=function(a,b,c){window.attachEvent?a.attachEvent("on"+b,c):a.addEventListener(b,c)},a.onlinejs.addEvent(a,"load",function(){a.onlinejs.fireHandlerDependOnStatus(a.onLine)}),a.onlinejs.addEvent(a,"online",function(){window.onlinejs.logic.checkConnectionWithRequest(!0)}),a.onlinejs.addEvent(a,"offline",function(){window.onlinejs.logic.checkConnectionWithRequest(!0)}),a.onlinejs.getStatusFromNavigatorOnLine(),a.onlinejs.logic.init(),a.checkOnLine(),a.onlinejs.startCheck(),a.onlinejs.handlerFired=!1}(window);